Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> IDENTIFIER ASSIGN expression
Rule 4     statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 5     statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 6     statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE
Rule 7     statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
Rule 8     statement -> PRINT LPAREN expression RPAREN
Rule 9     expression -> expression PLUS expression
Rule 10    expression -> expression MINUS expression
Rule 11    expression -> expression MULTIPLY expression
Rule 12    expression -> expression DIVIDE expression
Rule 13    expression -> expression GT expression
Rule 14    expression -> expression LT expression
Rule 15    expression -> expression EQ expression
Rule 16    expression -> expression NEQ expression
Rule 17    expression -> LPAREN expression RPAREN
Rule 18    expression -> NUMBER
Rule 19    expression -> STRING
Rule 20    expression -> TRUE
Rule 21    expression -> FALSE
Rule 22    expression -> IDENTIFIER

Terminals, with rules where they appear

ASSIGN               : 3
DIVIDE               : 12
ELSE                 : 5
EQ                   : 15
FALSE                : 21
FOR                  : 7
GT                   : 13
IDENTIFIER           : 3 22
IF                   : 4 5
LBRACE               : 4 5 5 6 7
LPAREN               : 4 5 6 7 8 17
LT                   : 14
MINUS                : 10
MULTIPLY             : 11
NEQ                  : 16
NUMBER               : 18
PLUS                 : 9
PRINT                : 8
RBRACE               : 4 5 5 6 7
RPAREN               : 4 5 6 7 8 17
SEMICOLON            : 7 7
STRING               : 19
TRUE                 : 20
WHILE                : 6
error                : 

Nonterminals, with rules where they appear

expression           : 3 4 5 6 7 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17
program              : 1 4 5 5 6 7 0
statement            : 1 2 7 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 8

state 2

    (2) program -> statement .

    IDENTIFIER      reduce using rule 2 (program -> statement .)
    IF              reduce using rule 2 (program -> statement .)
    WHILE           reduce using rule 2 (program -> statement .)
    FOR             reduce using rule 2 (program -> statement .)
    PRINT           reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    RBRACE          reduce using rule 2 (program -> statement .)


state 3

    (3) statement -> IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 9


state 4

    (4) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 10


state 5

    (6) statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 11


state 6

    (7) statement -> FOR . LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 12


state 7

    (8) statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 13


state 8

    (1) program -> program statement .

    IDENTIFIER      reduce using rule 1 (program -> program statement .)
    IF              reduce using rule 1 (program -> program statement .)
    WHILE           reduce using rule 1 (program -> program statement .)
    FOR             reduce using rule 1 (program -> program statement .)
    PRINT           reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)
    RBRACE          reduce using rule 1 (program -> program statement .)


state 9

    (3) statement -> IDENTIFIER ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 15

state 10

    (4) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (5) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 21

state 11

    (6) statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 22

state 12

    (7) statement -> FOR LPAREN . statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 23

state 13

    (8) statement -> PRINT LPAREN . expression RPAREN
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 24

state 14

    (22) expression -> IDENTIFIER .

    PLUS            reduce using rule 22 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 22 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 22 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 22 (expression -> IDENTIFIER .)
    GT              reduce using rule 22 (expression -> IDENTIFIER .)
    LT              reduce using rule 22 (expression -> IDENTIFIER .)
    EQ              reduce using rule 22 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 22 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 22 (expression -> IDENTIFIER .)
    IF              reduce using rule 22 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 22 (expression -> IDENTIFIER .)
    FOR             reduce using rule 22 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 22 (expression -> IDENTIFIER .)
    $end            reduce using rule 22 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 22 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 22 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 22 (expression -> IDENTIFIER .)


state 15

    (3) statement -> IDENTIFIER ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    IDENTIFIER      reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    IF              reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    WHILE           reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    FOR             reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    PRINT           reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    $end            reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    SEMICOLON       reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    RBRACE          reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 3 (statement -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32


state 16

    (17) expression -> LPAREN . expression RPAREN
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 33

state 17

    (18) expression -> NUMBER .

    PLUS            reduce using rule 18 (expression -> NUMBER .)
    MINUS           reduce using rule 18 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 18 (expression -> NUMBER .)
    DIVIDE          reduce using rule 18 (expression -> NUMBER .)
    GT              reduce using rule 18 (expression -> NUMBER .)
    LT              reduce using rule 18 (expression -> NUMBER .)
    EQ              reduce using rule 18 (expression -> NUMBER .)
    NEQ             reduce using rule 18 (expression -> NUMBER .)
    IDENTIFIER      reduce using rule 18 (expression -> NUMBER .)
    IF              reduce using rule 18 (expression -> NUMBER .)
    WHILE           reduce using rule 18 (expression -> NUMBER .)
    FOR             reduce using rule 18 (expression -> NUMBER .)
    PRINT           reduce using rule 18 (expression -> NUMBER .)
    $end            reduce using rule 18 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 18 (expression -> NUMBER .)
    RBRACE          reduce using rule 18 (expression -> NUMBER .)
    RPAREN          reduce using rule 18 (expression -> NUMBER .)


state 18

    (19) expression -> STRING .

    PLUS            reduce using rule 19 (expression -> STRING .)
    MINUS           reduce using rule 19 (expression -> STRING .)
    MULTIPLY        reduce using rule 19 (expression -> STRING .)
    DIVIDE          reduce using rule 19 (expression -> STRING .)
    GT              reduce using rule 19 (expression -> STRING .)
    LT              reduce using rule 19 (expression -> STRING .)
    EQ              reduce using rule 19 (expression -> STRING .)
    NEQ             reduce using rule 19 (expression -> STRING .)
    IDENTIFIER      reduce using rule 19 (expression -> STRING .)
    IF              reduce using rule 19 (expression -> STRING .)
    WHILE           reduce using rule 19 (expression -> STRING .)
    FOR             reduce using rule 19 (expression -> STRING .)
    PRINT           reduce using rule 19 (expression -> STRING .)
    $end            reduce using rule 19 (expression -> STRING .)
    SEMICOLON       reduce using rule 19 (expression -> STRING .)
    RBRACE          reduce using rule 19 (expression -> STRING .)
    RPAREN          reduce using rule 19 (expression -> STRING .)


state 19

    (20) expression -> TRUE .

    PLUS            reduce using rule 20 (expression -> TRUE .)
    MINUS           reduce using rule 20 (expression -> TRUE .)
    MULTIPLY        reduce using rule 20 (expression -> TRUE .)
    DIVIDE          reduce using rule 20 (expression -> TRUE .)
    GT              reduce using rule 20 (expression -> TRUE .)
    LT              reduce using rule 20 (expression -> TRUE .)
    EQ              reduce using rule 20 (expression -> TRUE .)
    NEQ             reduce using rule 20 (expression -> TRUE .)
    IDENTIFIER      reduce using rule 20 (expression -> TRUE .)
    IF              reduce using rule 20 (expression -> TRUE .)
    WHILE           reduce using rule 20 (expression -> TRUE .)
    FOR             reduce using rule 20 (expression -> TRUE .)
    PRINT           reduce using rule 20 (expression -> TRUE .)
    $end            reduce using rule 20 (expression -> TRUE .)
    SEMICOLON       reduce using rule 20 (expression -> TRUE .)
    RBRACE          reduce using rule 20 (expression -> TRUE .)
    RPAREN          reduce using rule 20 (expression -> TRUE .)


state 20

    (21) expression -> FALSE .

    PLUS            reduce using rule 21 (expression -> FALSE .)
    MINUS           reduce using rule 21 (expression -> FALSE .)
    MULTIPLY        reduce using rule 21 (expression -> FALSE .)
    DIVIDE          reduce using rule 21 (expression -> FALSE .)
    GT              reduce using rule 21 (expression -> FALSE .)
    LT              reduce using rule 21 (expression -> FALSE .)
    EQ              reduce using rule 21 (expression -> FALSE .)
    NEQ             reduce using rule 21 (expression -> FALSE .)
    IDENTIFIER      reduce using rule 21 (expression -> FALSE .)
    IF              reduce using rule 21 (expression -> FALSE .)
    WHILE           reduce using rule 21 (expression -> FALSE .)
    FOR             reduce using rule 21 (expression -> FALSE .)
    PRINT           reduce using rule 21 (expression -> FALSE .)
    $end            reduce using rule 21 (expression -> FALSE .)
    SEMICOLON       reduce using rule 21 (expression -> FALSE .)
    RBRACE          reduce using rule 21 (expression -> FALSE .)
    RPAREN          reduce using rule 21 (expression -> FALSE .)


state 21

    (4) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (5) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    RPAREN          shift and go to state 34
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32


state 22

    (6) statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    RPAREN          shift and go to state 35
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32


state 23

    (7) statement -> FOR LPAREN statement . SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE

    SEMICOLON       shift and go to state 36


state 24

    (8) statement -> PRINT LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    RPAREN          shift and go to state 37
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32


state 25

    (9) expression -> expression PLUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 38

state 26

    (10) expression -> expression MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 39

state 27

    (11) expression -> expression MULTIPLY . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 40

state 28

    (12) expression -> expression DIVIDE . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 41

state 29

    (13) expression -> expression GT . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 42

state 30

    (14) expression -> expression LT . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 43

state 31

    (15) expression -> expression EQ . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 44

state 32

    (16) expression -> expression NEQ . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 45

state 33

    (17) expression -> LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    RPAREN          shift and go to state 46
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32


state 34

    (4) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (5) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 47


state 35

    (6) statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 48


state 36

    (7) statement -> FOR LPAREN statement SEMICOLON . expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression GT expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . NUMBER
    (19) expression -> . STRING
    (20) expression -> . TRUE
    (21) expression -> . FALSE
    (22) expression -> . IDENTIFIER

    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 49

state 37

    (8) statement -> PRINT LPAREN expression RPAREN .

    IDENTIFIER      reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    FOR             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    RBRACE          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)


state 38

    (9) expression -> expression PLUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    PLUS            reduce using rule 9 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 9 (expression -> expression PLUS expression .)
    GT              reduce using rule 9 (expression -> expression PLUS expression .)
    LT              reduce using rule 9 (expression -> expression PLUS expression .)
    EQ              reduce using rule 9 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 9 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 9 (expression -> expression PLUS expression .)
    IF              reduce using rule 9 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 9 (expression -> expression PLUS expression .)
    FOR             reduce using rule 9 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 9 (expression -> expression PLUS expression .)
    $end            reduce using rule 9 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 9 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 9 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28

  ! MULTIPLY        [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 32 ]


state 39

    (10) expression -> expression MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    PLUS            reduce using rule 10 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 10 (expression -> expression MINUS expression .)
    GT              reduce using rule 10 (expression -> expression MINUS expression .)
    LT              reduce using rule 10 (expression -> expression MINUS expression .)
    EQ              reduce using rule 10 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 10 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 10 (expression -> expression MINUS expression .)
    IF              reduce using rule 10 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 10 (expression -> expression MINUS expression .)
    FOR             reduce using rule 10 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 10 (expression -> expression MINUS expression .)
    $end            reduce using rule 10 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 10 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 10 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 10 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28

  ! MULTIPLY        [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 32 ]


state 40

    (11) expression -> expression MULTIPLY expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    PLUS            reduce using rule 11 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 11 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 11 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 11 (expression -> expression MULTIPLY expression .)
    GT              reduce using rule 11 (expression -> expression MULTIPLY expression .)
    LT              reduce using rule 11 (expression -> expression MULTIPLY expression .)
    EQ              reduce using rule 11 (expression -> expression MULTIPLY expression .)
    NEQ             reduce using rule 11 (expression -> expression MULTIPLY expression .)
    IDENTIFIER      reduce using rule 11 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 11 (expression -> expression MULTIPLY expression .)
    WHILE           reduce using rule 11 (expression -> expression MULTIPLY expression .)
    FOR             reduce using rule 11 (expression -> expression MULTIPLY expression .)
    PRINT           reduce using rule 11 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 11 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 11 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 11 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 11 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! MULTIPLY        [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 32 ]


state 41

    (12) expression -> expression DIVIDE expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    PLUS            reduce using rule 12 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 12 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 12 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 12 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 12 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 12 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 12 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 12 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 12 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 12 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 12 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 12 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 12 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 12 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 12 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 12 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 12 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! MULTIPLY        [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! GT              [ shift and go to state 29 ]
  ! LT              [ shift and go to state 30 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 32 ]


state 42

    (13) expression -> expression GT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    IDENTIFIER      reduce using rule 13 (expression -> expression GT expression .)
    IF              reduce using rule 13 (expression -> expression GT expression .)
    WHILE           reduce using rule 13 (expression -> expression GT expression .)
    FOR             reduce using rule 13 (expression -> expression GT expression .)
    PRINT           reduce using rule 13 (expression -> expression GT expression .)
    $end            reduce using rule 13 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression GT expression .)
    RBRACE          reduce using rule 13 (expression -> expression GT expression .)
    RPAREN          reduce using rule 13 (expression -> expression GT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32

  ! PLUS            [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! MULTIPLY        [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 13 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 13 (expression -> expression GT expression .) ]


state 43

    (14) expression -> expression LT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    IDENTIFIER      reduce using rule 14 (expression -> expression LT expression .)
    IF              reduce using rule 14 (expression -> expression LT expression .)
    WHILE           reduce using rule 14 (expression -> expression LT expression .)
    FOR             reduce using rule 14 (expression -> expression LT expression .)
    PRINT           reduce using rule 14 (expression -> expression LT expression .)
    $end            reduce using rule 14 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression LT expression .)
    RBRACE          reduce using rule 14 (expression -> expression LT expression .)
    RPAREN          reduce using rule 14 (expression -> expression LT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32

  ! PLUS            [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! MULTIPLY        [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 14 (expression -> expression LT expression .) ]


state 44

    (15) expression -> expression EQ expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    IDENTIFIER      reduce using rule 15 (expression -> expression EQ expression .)
    IF              reduce using rule 15 (expression -> expression EQ expression .)
    WHILE           reduce using rule 15 (expression -> expression EQ expression .)
    FOR             reduce using rule 15 (expression -> expression EQ expression .)
    PRINT           reduce using rule 15 (expression -> expression EQ expression .)
    $end            reduce using rule 15 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 15 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 15 (expression -> expression EQ expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32

  ! PLUS            [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 15 (expression -> expression EQ expression .) ]


state 45

    (16) expression -> expression NEQ expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    IDENTIFIER      reduce using rule 16 (expression -> expression NEQ expression .)
    IF              reduce using rule 16 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 16 (expression -> expression NEQ expression .)
    FOR             reduce using rule 16 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 16 (expression -> expression NEQ expression .)
    $end            reduce using rule 16 (expression -> expression NEQ expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 16 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 16 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32

  ! PLUS            [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 16 (expression -> expression NEQ expression .) ]


state 46

    (17) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (expression -> LPAREN expression RPAREN .)


state 47

    (4) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (5) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    program                        shift and go to state 50
    statement                      shift and go to state 2

state 48

    (6) statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    program                        shift and go to state 51
    statement                      shift and go to state 2

state 49

    (7) statement -> FOR LPAREN statement SEMICOLON expression . SEMICOLON statement RPAREN LBRACE program RBRACE
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . GT expression
    (14) expression -> expression . LT expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression

    SEMICOLON       shift and go to state 52
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 28
    GT              shift and go to state 29
    LT              shift and go to state 30
    EQ              shift and go to state 31
    NEQ             shift and go to state 32


state 50

    (4) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (5) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (1) program -> program . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 53
    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 8

state 51

    (6) statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 54
    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 8

state 52

    (7) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON . statement RPAREN LBRACE program RBRACE
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 55

state 53

    (4) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (5) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    IDENTIFIER      reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    SEMICOLON       reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RPAREN          reduce using rule 4 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 56


state 54

    (6) statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    IDENTIFIER      reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    SEMICOLON       reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RPAREN          reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 55

    (7) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement . RPAREN LBRACE program RBRACE

    RPAREN          shift and go to state 57


state 56

    (5) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 58


state 57

    (7) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 59


state 58

    (5) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    program                        shift and go to state 60
    statement                      shift and go to state 2

state 59

    (7) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 2
    program                        shift and go to state 61

state 60

    (5) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 62
    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 8

state 61

    (7) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . IDENTIFIER ASSIGN expression
    (4) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (5) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (6) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (7) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE
    (8) statement -> . PRINT LPAREN expression RPAREN

    RBRACE          shift and go to state 63
    IDENTIFIER      shift and go to state 3
    IF              shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 8

state 62

    (5) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    IDENTIFIER      reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IF              reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FOR             reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    PRINT           reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    SEMICOLON       reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RPAREN          reduce using rule 5 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)


state 63

    (7) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .

    IDENTIFIER      reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)
    FOR             reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)
    PRINT           reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)
    SEMICOLON       reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)
    RPAREN          reduce using rule 7 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACE program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for GT in state 42 resolved as shift
WARNING: shift/reduce conflict for LT in state 42 resolved as shift
WARNING: shift/reduce conflict for EQ in state 42 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for GT in state 43 resolved as shift
WARNING: shift/reduce conflict for LT in state 43 resolved as shift
WARNING: shift/reduce conflict for EQ in state 43 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for GT in state 44 resolved as shift
WARNING: shift/reduce conflict for LT in state 44 resolved as shift
WARNING: shift/reduce conflict for EQ in state 44 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for GT in state 45 resolved as shift
WARNING: shift/reduce conflict for LT in state 45 resolved as shift
WARNING: shift/reduce conflict for EQ in state 45 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 45 resolved as shift
